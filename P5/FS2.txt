precision highp float;
uniform float time;
varying vec3 fPosition;
varying vec3 fNormal;

vec2 blinnPhongDir(vec3 lightDir, float lightInt, float Ka, float Kd, float Ks, float shininess)
{
  vec3 s = normalize(lightDir);
  vec3 v = normalize(-fPosition);
  vec3 n = normalize(fNormal);
  vec3 h = normalize(v+s);
  float diffuse = Ka + Kd * lightInt * max(0.0, dot(n, s));
  float spec =  Ks * pow(max(0.0, dot(n,h)), shininess);
  return vec2(diffuse, spec);
}

void main()
{
  vec3 ColorL1 = blinnPhongDir(vec3(-1,1,0),0.0,0.0,0.0,.8*mod(time,0.2),.7).y*vec3(.0,.0,.7);
  vec3 ColorL2 = blinnPhongDir(vec3(1,1,0),0.0,0.0,0.0,.8*mod(time+.05,0.2),.7).y*vec3(.0,.7,.0);
  vec3 ColorL3 = blinnPhongDir(vec3(0,-1,0),5.0,0.0,.8*mod(time+.15,0.2),.0,.7).x*vec3(.7,.0,.0);
  gl_FragColor = vec4(ColorL1+ColorL2+ColorL3,1.0);
}
